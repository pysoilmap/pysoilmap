name: Tests
on:
  push:
  pull_request:

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python:
          - "3.7"
          - "3.8"
          - "3.9"
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - run: pip install -U pip wheel flake8 twine pytest
      - run: python setup.py sdist bdist_wheel
      - run: twine check dist/*
      - run: pip install dist/*.whl
      - run: flake8 src tests
      - run: pytest tests

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
        if: startsWith(github.ref, 'refs/tags/v') &&
            matrix.os == 'ubuntu-latest' &&
            matrix.python == '3.8'

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - run: pip install -e .[doc]
      - run: make -C docs html

  deploy:
    name: Upload release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
        && github.event_name == 'push'
        && success()

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run: pip install twine

      - name: Upload PyPI package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
